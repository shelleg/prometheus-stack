version: '3.2'

volumes:
    prometheus_data: {}
    grafana_data: {}
    alerta_mongo_data: {}

services:
  # main prometheus server
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-latest}
    expose:
      - 9090
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus-alerta.yml'
      - '--storage.tsdb.path=/prometheus'
    depends_on:
      - node-exporter
      - alertmanager
      - cadvisor
      - mysql-exporter


  # prometheus official node-exporter
  node-exporter:
    image: prom/node-exporter:${NODE_EXPORTER_VERSION:-latest}
    expose:
      - 9100
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
      - /etc/hostname:/etc/host_hostname
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.textfile.directory=/etc/node-exporter/"
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    environment:
      HOST_HOSTNAME: /etc/host_hostname

  # prometheus alertmanager
  alertmanager:
    image: prom/alertmanager:${ALERTMANAGER_VERSION:-latest}
    expose:
      - 9093
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '-config.file=/etc/alertmanager/config-alerta.yml'
      - '-storage.path=/alertmanager'
      - '-log.level=debug'
    depends_on:
      - mailhog

  # docker metrics
  cadvisor:
    image: google/cadvisor:${CADVISOR_VERSION:-latest}
    expose:
      - 8082
    ports:
      - 8082:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  # mysql metrics
  # docker run -d -p 9104:9104 --link=my_mysql_container:bdd  -e DATA_SOURCE_NAME="user:password@(bdd:3306)/database" prom/mysqld-exporter
  mysql-exporter:
    image: prom/mysqld-exporter:${MYSQLD_EXPORTER_VERSION:-latest}
    expose:
      - 9104
    ports:
      - 9104:9104
    command: "-config.my-cnf=/.my.cnf"
    volumes:
      - ./mysql/.my.cnf:/.my.cnf

  # graphing
  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-latest}
    expose:
      - 3000
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - grafana/config


  alerta:
    image: alerta/alerta-web:${ALERTA_VERSION:-latest}
    expose:
      - 9080
    ports:
      - 9080:80
    depends_on:
      - mongo-db
      - alertmanager
    environment:
      - AUTH_REQUIRED=${AUTH_REQUIRED:-False}
      - ADMIN_USERS=${ADMIN_USERS:-not-set}
      - CUSTOMER_VIEWS=${CUSTOMER_VIEWS:-False}
      - PROVIDER=${PROVIDER:-basic}
      - CLIENT_ID=${CLIENT_ID:-not-set}
      - CLIENT_SECRET=${CLIENT_SECRET:-not-set}
      - ALLOWED_EMAIL_DOMAIN=${ALLOWED_EMAIL_DOMAIN:-*}
      - ALLOWED_GITHUB_ORGS=${ALLOWED_GITHUB_ORGS:-*}
      - GITLAB_URL=${GITLAB_URL:-not-set}
      - ALLOWED_GITLAB_GROUPS=${ALLOWED_GITLAB_GROUPS:-*}
      - PLUGINS=${PLUGINS:-reject,prometheus}
      - ALERTMANAGER_API_URL=${ALERTMANAGER_API_URL:-http://alertmanager:9093}
      - ORIGIN_BLACKLIST=${ORIGIN_BLACKLIST:-not-set}
      - ALLOWED_ENVIRONMENTS=${ALLOWED_ENVIRONMENTS:-Production,Development}
      - MONGO_URI=mongodb://mongo-db:27017/monitoring
    restart: always

  mongo-db:
    image: mongo:${MONGO_VERSION:-latest}
    volumes:
      - alerta_mongo_data:/data/db
    restart: always

  mailhog:
  mailhog:
    image: blueimp/mailhog:${MAILHOG_VERSION:-latest}
    ports:
      - "1025:1025"
      - "8025:8025"

#  cloudwatch-exporter:
#    image: prom/cloudwatch-exporter
#    ports:
#      - 9106:9106
#    expose:
